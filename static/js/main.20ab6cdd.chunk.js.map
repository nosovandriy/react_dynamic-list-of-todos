{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","filteredTodos","selectedTodo","handleFoundTodo","className","map","todo","id","completed","title","type","onClick","classNames","TodoFilter","filteredByQuery","handleFoundData","handleFilteredData","handleClearedQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseModal","useState","user","setUser","loadUserFromServer","a","userId","userFromServer","useEffect","href","email","name","App","todos","setTodos","filteredBySelect","setFilteredBySelect","setFilteredByQuery","setSelectedTodo","showTodoModal","setShowTodoModal","loadFromServer","todosFromServer","useMemo","todosFiltered","filter","includes","toLowerCase","trim","getFilteredTodos","query","select","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20ab6cdd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[];\n  selectedTodo: Todo | null,\n  handleFoundTodo: (value: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  filteredTodos,\n  selectedTodo,\n  handleFoundTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n\n      {filteredTodos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={`${todo.completed ? 'has-text-success' : 'has-text-danger'}`}>\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => handleFoundTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far fa-eye',\n                  { 'fa-eye-slash': todo.id === selectedTodo?.id },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  filteredByQuery: string,\n  handleFoundData: (value: string) => void,\n  handleFilteredData: (value: string) => void,\n  handleClearedQuery: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filteredByQuery,\n  handleFoundData,\n  handleFilteredData,\n  handleClearedQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleFilteredData(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filteredByQuery}\n          onChange={(event) => handleFoundData(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filteredByQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearedQuery}\n            >\n              <></>\n            </button>\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo?: Todo | null,\n  handleCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleCloseModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const loadUserFromServer = async () => {\n    if (selectedTodo?.userId) {\n      const userFromServer = await getUser(selectedTodo?.userId);\n\n      setUser(userFromServer);\n    }\n  };\n\n  useEffect(() => {\n    loadUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst getFilteredTodos = (\n  todos: Todo[], filteredBySelect: string, filteredByQuery: string,\n) => {\n  const todosFiltered = todos.filter(\n    todo => todo.title.includes(filteredByQuery.toLowerCase().trim()),\n  );\n\n  switch (filteredBySelect) {\n    case 'active':\n      return todosFiltered.filter(todo => !todo.completed);\n\n    case 'completed':\n      return todosFiltered.filter(todo => todo.completed);\n\n    case 'all':\n    default:\n      return todosFiltered;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredBySelect, setFilteredBySelect] = useState('all');\n  const [filteredByQuery, setFilteredByQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [showTodoModal, setShowTodoModal] = useState(false);\n\n  const loadFromServer = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  };\n\n  useEffect(() => {\n    loadFromServer();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return getFilteredTodos(todos, filteredBySelect, filteredByQuery);\n  }, [todos, filteredBySelect, filteredByQuery]);\n\n  const handleFilteredData = (select: string) => {\n    switch (select) {\n      case 'all':\n        setFilteredBySelect(select);\n        break;\n\n      case 'active':\n        setFilteredBySelect(select);\n        break;\n\n      case 'completed':\n        setFilteredBySelect(select);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleFoundData = (query: string) => {\n    setFilteredByQuery(query);\n  };\n\n  const handleFoundTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n    setShowTodoModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowTodoModal(false);\n    setSelectedTodo(null);\n  };\n\n  const handleClearedQuery = () => (\n    filteredByQuery && setFilteredByQuery('')\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filteredByQuery={filteredByQuery}\n                handleFoundData={handleFoundData}\n                handleFilteredData={handleFilteredData}\n                handleClearedQuery={handleClearedQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                filteredTodos={filteredTodos}\n                selectedTodo={selectedTodo}\n                handleFoundTodo={handleFoundTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showTodoModal && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleCloseModal={handleCloseModal}\n\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}